-- MySQL Script generated by MySQL Workbench
-- Thu Nov 15 01:00:54 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`VIVERO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VIVERO` (
  `Coordenadas` INT NOT NULL,
  `Localidad` VARCHAR(45) NULL,
  PRIMARY KEY (`Coordenadas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ZONA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ZONA` (
  `Nombre` VARCHAR(45) NOT NULL,
  `Producto` INT NULL,
  `VIVERO_Coordenadas` INT NOT NULL,
  PRIMARY KEY (`Nombre`),
  INDEX `fk_ZONA_VIVERO_idx` (`VIVERO_Coordenadas` ASC),
  CONSTRAINT `fk_ZONA_VIVERO`
    FOREIGN KEY (`VIVERO_Coordenadas`)
    REFERENCES `mydb`.`VIVERO` (`Coordenadas`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CLIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CLIENTE` (
  `DNI` INT NOT NULL,
  `Bonificacion` VARCHAR(45) NULL,
  `Total` VARCHAR(45) NULL,
  PRIMARY KEY (`DNI`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`EMPLEADO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`EMPLEADO` (
  `DNI` INT NOT NULL,
  `ZONA_Nombre` VARCHAR(45) NOT NULL,
  `ZONA_coordenadas` INT NOT NULL,
  `Sueldo` VARCHAR(45) NULL,
  `CSS` VARCHAR(45) NULL,
  PRIMARY KEY (`DNI`),
  INDEX `fk_EMPLEADO_ZONA1_idx` (`ZONA_Nombre` ASC, `ZONA_coordenadas` ASC),
  CONSTRAINT `fk_EMPLEADO_ZONA1`
    FOREIGN KEY (`ZONA_Nombre` , `ZONA_coordenadas`)
    REFERENCES `mydb`.`ZONA` (`Nombre` , `Nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PRODUCTO` (
  `Codigo` INT NOT NULL,
  `Stock` VARCHAR(45) NULL,
  PRIMARY KEY (`Codigo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PROD_EMPLEADO_ CLIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PROD_EMPLEADO_ CLIENTE` (
  `Fecha` VARCHAR(45) NOT NULL,
  `EMPLEADO_DNI` INT NOT NULL,
  `PRODUCTO_Codigo` INT NOT NULL,
  `CLIENTE_DNI` INT NOT NULL,
  INDEX `fk_PROD_EMPLEADO_ CLIENTE_EMPLEADO1_idx` (`EMPLEADO_DNI` ASC),
  INDEX `fk_PROD_EMPLEADO_ CLIENTE_PRODUCTO1_idx` (`PRODUCTO_Codigo` ASC),
  PRIMARY KEY (`Fecha`),
  INDEX `fk_PROD_EMPLEADO_ CLIENTE_CLIENTE1_idx` (`CLIENTE_DNI` ASC),
  CONSTRAINT `fk_PROD_EMPLEADO_ CLIENTE_EMPLEADO1`
    FOREIGN KEY (`EMPLEADO_DNI`)
    REFERENCES `mydb`.`EMPLEADO` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_PROD_EMPLEADO_ CLIENTE_PRODUCTO1`
    FOREIGN KEY (`PRODUCTO_Codigo`)
    REFERENCES `mydb`.`PRODUCTO` (`Codigo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_PROD_EMPLEADO_ CLIENTE_CLIENTE1`
    FOREIGN KEY (`CLIENTE_DNI`)
    REFERENCES `mydb`.`CLIENTE` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
